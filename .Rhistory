library(shiny); runApp('saveTest.R')
library(shiny); runApp('saveTest.R')
runApp('saveTest.R')
install.packages("SocialMediaLab")
library(SocialMediaLab)
library(shiny); runApp('saveTest.R')
options(shiny.sanitize.errors = F)
library(SocialMediaLab)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
AuthenticateWithTwitterAPI( "bIhOZeVfPfdXDxdHfWtUJ0up9","Bd1WfuhYrZUpYE7ODGO65lnknvIUvoC35IJcvr4lRH3cOCbAHT", "947756430672711680-avkhywucJgaXhbOjiCd6aXGXVZRHISj"," EDiYOUcLix4j6rjPxrcUopQ0eASynASBjNpjH9o92GYY2")
AuthenticateWithTwitterAPI(api_key = apiKey,api_secret = apiSecret,access_token = accessToken,access_token_secret = tokenSecret)
AuthenticateWithTwitterAPI(api_key = apiKey, api_secret = apiSecret, access_token = accessToken, access_token_secret = tokenSecret)
apiKey <- "bIhOZeVfPfdXDxdHfWtUJ0up9"
apiSecret <-  "Bd1WfuhYrZUpYE7ODGO65lnknvIUvoC35IJcvr4lRH3cOCbAHT"
accessToken <- "avkhywucJgaXhbOjiCd6aXGXVZRHISj"
tokenSecret <- "EDiYOUcLix4j6rjPxrcUopQ0eASynASBjNpjH9o92GYY2"
AuthenticateWithTwitterAPI(api_key = apiKey, api_secret = apiSecret, access_token = accessToken, access_token_secret = tokenSecret)
accessToken <- " 947756430672711680-avkhywucJgaXhbOjiCd6aXGXVZRHISj"
accessToken <- "947756430672711680-avkhywucJgaXhbOjiCd6aXGXVZRHISj"
runApp('saveTest.R')
AuthenticateWithTwitterAPI(api_key = apiKey, api_secret = apiSecret, access_token = accessToken, access_token_secret = tokenSecret)
CollectDataTwitter("#Turkey")
runApp('saveTest.R')
CollectDataTwitter(searchTerm = "#turkey", numTweets = 100)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
a <-  CollectDataTwitter(searchTerm = "#turkey", numTweets = 10)
a
table(a)
as.table(a)
as.matrix(a)
runApp('saveTest.R')
runApp('saveTest.R')
View(a)
typeof(a)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
View(a)
a$text
as.data.frame.data.frame(a)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
list2df
runApp('saveTest.R')
runApp('saveTest.R')
a <-  CollectDataTwitter(searchTerm = "#turkey", numTweets = 10,verbose = T,writeToFile = T)
runApp('saveTest.R')
library(SocialMediaLab)
install.packages("twitteR")
library(twitteR)
a <-  CollectDataTwitter(searchTerm = "#turkey", numTweets = 100,resultType = "json")
library(SocialMediaLab)
library(shiny); runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
a
a <-  CollectDataTwitter(searchTerm = input$demoText, numTweets = 100)
a <-  CollectDataTwitter(searchTerm = "input$demoText", numTweets = 100)
a <-  CollectDataTwitter(searchTerm = "in", numTweets = 100)
b <- matrix(a)
c <- as.data.frame(b)
View(b)
View(c)
View(a)
typeof(a)
type_convert(a)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
a <-  CollectDataTwitter(searchTerm = "in", numTweets = 100)
a <-  CollectDataTwitter(searchTerm = "in", numTweets = 100)
View(a)
as.data.frame(a)
b <- as.data.frame(a)
b
View(b)
b <- as.data.frame(a)
View(b)
runApp('saveTest.R')
runApp('saveTest.R')
a <-  CollectDataTwitter(searchTerm = "in", numTweets = 100)
b <- corpus(a)
b
View(b)
b[[1]]
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
b <- corpus("Mar_19_13_39_38_2018_+03_#turkey_TwitterData.csv")
View(b)
View(b)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
b <- "Mar_19_14_51_03_2018_+03_#galatasaray_TwitterData.csv"
View(b)
runApp('saveTest.R')
runApp('saveTest.R')
b <- readtext("Mar_19_14_51_03_2018_+03_#galatasaray_TwitterData.csv",text_field = "text")
b <- corpus(b)
b <- readtext("Mar_19_14_51_03_2018_+03_#galatasaray_TwitterData.csv",text_field = "text")
c <- corpus(b)
View(c)
runApp('saveTest.R')
library(shiny); runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
apiKey <- "bIhOZeVfPfdXDxdHfWtUJ0up9"
apiSecret <-  "Bd1WfuhYrZUpYE7ODGO65lnknvIUvoC35IJcvr4lRH3cOCbAHT"
accessToken <- "947756430672711680-avkhywucJgaXhbOjiCd6aXGXVZRHISj"
tokenSecret <- "EDiYOUcLix4j6rjPxrcUopQ0eASynASBjNpjH9o92GYY2"
AuthenticateWithTwitterAPI(api_key = apiKey, api_secret = apiSecret, access_token = accessToken, access_token_secret = tokenSecret)
library(SocialMediaLab)
AuthenticateWithTwitterAPI(api_key = apiKey, api_secret = apiSecret, access_token = accessToken, access_token_secret = tokenSecret)
a <-  CollectDataTwitter(searchTerm = "#galatasaray", numTweets = 100)
write.csv(a,"twData")
write.csv(a)
as.data.frame(a)
write.csv(a)
b <- as.data.frame(a)
write.csv(b)
library(plyr)
a <-  CollectDataTwitter(searchTerm = "#galatasaray", numTweets = 100)
tweets.df = ldply(a, function(t) t$toDataFrame())
b <- as.data.frame(a)
write.csv(b)
df <- apply(a,2,as.character)
write.csv(df)
write.csv(df,"aNewCSV")
r <- read.csv("aNewCSV")
r$text <- "Text"
View(r)
r <- read.csv("aNewCSV")
colnames(r)[colnames(r)=="text"] <- "Text"
colnames(r)[colnames(r)=="created_at"] <- "Date"
View(r)
library(shiny); runApp('saveTest.R')
write_csv(r,"twCsv.csv")
runApp('saveTest.R')
library(quanteda)
aicorp <- corpus(r)
colnames(r)[colnames(r)=="text"] <- "Text"
aicorp <- corpus(r)
colnames(r)[colnames(r)=="Text"] <- "text"
aicorp <- corpus(r)
View(r)
r <- read.csv("aNewCSV")
aicorp <- corpus(r)
aicorp <- corpus(a)
aicorp
View(aicorp)
saveRDS(aicorp,"aicoprTW")
runApp('saveTest.R')
runApp('saveTest.R')
library(SocialMediaLab)
library(quanteda)
apiKey <- "bIhOZeVfPfdXDxdHfWtUJ0up9"
apiSecret <-  "Bd1WfuhYrZUpYE7ODGO65lnknvIUvoC35IJcvr4lRH3cOCbAHT"
accessToken <- "947756430672711680-avkhywucJgaXhbOjiCd6aXGXVZRHISj"
tokenSecret <- "EDiYOUcLix4j6rjPxrcUopQ0eASynASBjNpjH9o92GYY2"
AuthenticateWithTwitterAPI(api_key = apiKey, api_secret = apiSecret, access_token = accessToken, access_token_secret = tokenSecret)
a <-  CollectDataTwitter(searchTerm = "#galatasaray", numTweets = 100)
df <- apply(a,2,as.character)
write.csv(df,"aNewCSV")
r <- read.csv("aNewCSV")
colnames(r)[colnames(r)=="Text"] <- "text"
colnames(r)[colnames(r)=="created_at"] <- "Date"
View(r)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
readRDS("/home/ogulcan/demoGo")
a <- readRDS("/home/ogulcan/demoGo")
a$documents
View(a$documents)
runApp('saveTest.R')
a <- readRDS("/home/ogulcan/demoGo")
a
View(a)
a[["tokens"]]
View(a[["documents"]])
View(a[["documents"]1])
runApp('saveTest.R')
View(a$documents)
runApp('saveTest.R')
a <- readRDS("/home/ogulcan/demoGo")
View(a$documents)
a = a %>% na.omit()
View(a$documents)
library(dp)
library(dplyr)
a = a %>% na.omit()
View(a$documents)
a$documents = a$documents %>% na.omit()
View(a$documents)
a <- readRDS("/home/ogulcan/demoGo")
a$documents <- a$documents %>% na.omit()
View(a$documents)
library(dplyr)
na.omit(a)
View(a$documents)
a <- readRDS("/home/ogulcan/demoGo")
na.action(a)
View(a$documents)
na.omit(a$documents)
View(a$documents)
a$documents %>% na.omit()
a$documents <- a$documents %>% na.omit()
a$documents
View(a$documents)
a <- a$documents %>% na.omit()
View(a$documents)
a <- readRDS("/home/ogulcan/demoGo")
View(a$documents)
a <- a$documents %>% na.omit()
apiKey <- "bIhOZeVfPfdXDxdHfWtUJ0up9"
apiSecret <-  "Bd1WfuhYrZUpYE7ODGO65lnknvIUvoC35IJcvr4lRH3cOCbAHT"
accessToken <- "947756430672711680-avkhywucJgaXhbOjiCd6aXGXVZRHISj"
tokenSecret <- "EDiYOUcLix4j6rjPxrcUopQ0eASynASBjNpjH9o92GYY2"
AuthenticateWithTwitterAPI(api_key = apiKey, api_secret = apiSecret, access_token = accessToken, access_token_secret = tokenSecret)
a <-  CollectDataTwitter(searchTerm = "#Afrin", numTweets = 500,verbose = T,writeToFile = T)
runApp('saveTest.R')
runApp('saveTest.R')
library(shiny); runApp('saveTest.R')
install.packages(c("shinydashboard", "quanteda", "readtext", "SnowballC", "ggplot2", "dplyr", "spacyr", "DT", "shinyBS", "tidyverse", "shinycssloaders"))
library(shinydashboard)
library(quanteda)
library(readtext)
library(SnowballC)
library(ggplot2)
library(dplyr)
library(spacyr)
library(DT)
library(shinyBS)
library(anytime)
library(lubridate)
library(tidyverse)
library(shinycssloaders)
library(SocialMediaLab)
install.packages("quanteda")
install.packages("quanteda")
## app.R ##
library(shinydashboard)
library(quanteda)
library(readtext)
install.packages("readtext")
install.packages("readtext")
library(readtext)
library(SnowballC)
library(ggplot2)
library(dplyr)
library(spacyr)
library(DT)
library(shinyBS)
library(anytime)
install.packages("anytime")
library(lubridate)
library(anytime)
library(tidyverse)
library(shinycssloaders)
library(SocialMediaLab)
library(readtext)
install.packages("readtext", dependencies = FALSE)
install.packages("httr")
install.packages("openssÅŸ")
install.packages("openssl")
install.packages("antiword")
install.packages("pdftools")
install.packages("readtext")
install.packages("antiword")
install.packages("readtext")
library(readtext)
library(lubridate)
library(tidyverse)
install.packages("tidyverse", dependencies = FALSE)
install.packages("tidyverse")
library(tidyverse)
library(shinycssloaders)
library(SocialMediaLab)
install.packages("SocialMediaLab")
library(shiny); runApp('saveTest.R')
shiny::runApp()
runApp()
~/newdir
runApp("seperate")
runApp('seperate')
runApp('seperate')
runApp('seperate')
runApp('seperate')
runApp('seperate')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("gplots")
install.packages(c("proxy", "MASS", "dendextend"))
install.packages(c("factoextra", "FactoMineR"))
runApp()
runApp()
runApp()
shiny::runApp()
install.packages("RMongo")
install.packages("RMongo")
install.packages("RMongo")
install.packages("RMongo","rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("RMongo")
library(RMongo)
library(rJava)
Sys.setenv(JAVA_HOME='/usr/lib/jvm/default-java/jre' )
library(rJava)
library(rJava)
library(RMongo)
Sys.getenv("JAVA_HOME")
library(RMongo)
library(RMongo)
dyn.load("libjvm.so", DLLpath ='/usr/lib/R/lib/libR.so')
library(RMongo)
library(RMongo)
library(RMongo)
library(RMongo)
library(RMongo)
Sys.getenv("JAVA_HOME")
install.packages("RMongo")
library(RMongo)
library(rJava)
library(RMongo)
shiny::runApp()
library(RMongo)
library(RMongo)
mongoDbConnect()
mongoDbConnect(dbName = "db")
mongoDbConnect(dbName = "db2")
mongoDbConnect(dbName = "shinyDB")
db <- mongoDbConnect(dbName = "shinyDB")
dbAuthenticate(db)
output <- dbInsertDocument(db, "test_data", '{"foo": "bar"}')
output <- dbGetQuery(db, "test_data",
'{"foo": "bar"}')
output <- dbGetQuery(db, "test_data",  '{"foo": "bar"}')
output
dbDisconnect(db)
output <- dbGetQuery(db, "test_data",  '{"foo": "bar"}')
db <- mongoDbConnect(dbName = "shinyDB")
output <- dbInsertDocument(db, "test_data", '{"foo": "bar"}')
db <- mongoDbConnect(dbName = "shinyDB")
output <- dbInsertDocument(db, "test_data", '{"foo": "bar"}')
output <- dbGetQuery(db, "test_data",  '{"foo": "bar"}')
output
output <- dbGetQuery(db, "test_data",  '{"foo": }')
output <- dbGetQuery(db, "test_data",  '{"foo": "*"}')
output
output <- dbGetQuery(db, "test_data",  '{"foo": "b*"}')
output
output <- dbGetQuery(db,'test_data','{"foo": { "$regex": "bar*", "$options": "i"} }')
output
output <- dbInsertDocument(db, "test_data", '{"foo": "bar2"}')
output <- dbInsertDocument(db, "test_data", '{"foo": "bar3"}')
output <- dbGetQuery(db,'test_data','{"foo": { "$regex": "bar*", "$options": "i"} }')
output
output <- dbInsertDocument(db, "test_data", '{"foo": "barmen"}')
output
output <- dbGetQuery(db,'test_data','{"foo": { "$regex": "bar*", "$options": "i"} }')
output
output <- dbGetQuery(db,'test_data','{"foo": { "$regex": "bar", "$options": "i"} }')
output
output <- dbGetQuery(db,'test_data','{"foo": "bar" }')
output
View(output)
db <- mongoDbConnect(dbName = "shinyDB")
output <- dbInsertDocument(db, "test_data", '{"foo": "barmen"}')
output <- dbGetQuery(db,'test_data','{"foo": "bar" }')
output
library(quanteda)
install.packages("readtext")
library(readtext)
library(readtext)
corpus <- readtext(file ="exportTest.json",text_field = "content" )
View(corpus)
dim(corpus)
install.packages("jsonlite")
library(jsonlite)
corpus <- jsonlite::fromJSON("exportTest.json")
View(corpus)
aiJson <- jsonlite::fromJSON("exportTest.json")
remove(corpus)
colnames(aiJson)
colnames(aiJson)[7:8] <- c("Date","Text")
colnames(aiJson)
shiny::runApp()
colnames(aiJson)
View(aiJson)
class(aiJson$Text)
class(aiJson$Date)
aidata <- aidata%>% separate(Date,c("day","month","year"),remove = F)
aidata <- aiJson
aidata <- aidata%>% separate(Date,c("day","month","year"),remove = F)
dim(aidata)
head(aidata)
View(aidata)
aidata$Date
as.Date(aidata$Date)
runApp()
runApp()
aiJson <- jsonlite::fromJSON("exportTest.json")
colnames(aiJson)[7:8] <- c("Date","Text")
colnames(aiJson)
aidata <- aiJson
aidata$Date <- as.Date(aidata$Date)
library(jsonLite)
library(jsonlite)
runApp()
runApp()
library(readtext)
shiny::runApp()
strsplit("ndndnd.csv",split = ".")
strsplit("ndndnd.csv",split = "[.]")
strsplit("ndndnd.csv",split = "[.]")[[1]][2]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
gsub(";"," ",t1)
t1 <- "artificial;driverless"
gsub(";"," ",t1)
paste0('"\',gsub(";"," ",t1),'"\')
)
)
)
)
'
gsub(";"," ",t1)
'"\'
'\\"'
'\"'
paste0('\"',gsub(";"," ",t1),'\"'))
paste0('\"',gsub(";"," ",t1),'\"')
gsub(";"," ",t1)
"""
"
'"'
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
system("echo 'hello'")
system("ls")
system("pwd")
runApp()
runApp()
runApp()
runApp("/dashboard")
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
