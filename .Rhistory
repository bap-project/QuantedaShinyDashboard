runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
library(shiny); runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
data <- read.csv("/home/ogulcan/saveCSV")
data$entity_type
unique(data$entity_type)
type(data$entity_type)
typeof(data$entity_type)
list(data$entity_type)
list((unique(data$entity_type))
list(unique(data$entity_type))
list(unique(data$entity_type))
a <- unique(data$entity_type)
hist(a)
plot(a)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
## Only run this example in interactive R sessions
if (interactive()) {
library(shiny)
# A dashboard header with 3 dropdown menus
header <- dashboardHeader(
title = "Dashboard Demo",
# Dropdown menu for messages
dropdownMenu(type = "messages", badgeStatus = "success",
messageItem("Support Team",
"This is the content of a message.",
time = "5 mins"
),
messageItem("Support Team",
"This is the content of another message.",
time = "2 hours"
),
messageItem("New User",
"Can I get some help?",
time = "Today"
)
),
# Dropdown menu for notifications
dropdownMenu(type = "notifications", badgeStatus = "warning",
notificationItem(icon = icon("users"), status = "info",
"5 new members joined today"
),
notificationItem(icon = icon("warning"), status = "danger",
"Resource usage near limit."
),
notificationItem(icon = icon("shopping-cart", lib = "glyphicon"),
status = "success", "25 sales made"
),
notificationItem(icon = icon("user", lib = "glyphicon"),
status = "danger", "You changed your username"
)
),
# Dropdown menu for tasks, with progress bar
dropdownMenu(type = "tasks", badgeStatus = "danger",
taskItem(value = 20, color = "aqua",
"Refactor code"
),
taskItem(value = 40, color = "green",
"Design new layout"
),
taskItem(value = 60, color = "yellow",
"Another task"
),
taskItem(value = 80, color = "red",
"Write documentation"
)
)
)
shinyApp(
ui = dashboardPage(
header,
dashboardSidebar(),
dashboardBody()
),
server = function(input, output) { }
)
}
runApp('saveTest.R')
runApp('saveTest.R')
library(shiny); runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
read.csv("/home/ogulcan/saveCSV")
a <- read.csv("/home/ogulcan/saveCSV")
typeof(a$doc_id)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
View(a)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
a <-filter(parsedCSV,entity_type == input$csvFilter)
parsedCSV <- read.csv("/home/ogulcan/saveCSV")
a <-filter(parsedCSV,entity_type == input$csvFilter)
a <-filter(parsedCSV,entity_type == "GPE")
name <- paste("text",1)
name <- paste("text",1,sep = '')
b <- filter(a, doc_id == name)
View(b)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
parsedCSV <- read.csv("/home/ogulcan/saveCSV")
name <- paste("text",1,sep = '')
b <- filter(parsedCSV, doc_id == name)
View(b)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
library(shiny); runApp('saveTest.R')
library(shiny); runApp('saveTest.R')
runApp('saveTest.R')
install.packages("SocialMediaLab")
library(SocialMediaLab)
library(shiny); runApp('saveTest.R')
options(shiny.sanitize.errors = F)
library(SocialMediaLab)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
AuthenticateWithTwitterAPI( "bIhOZeVfPfdXDxdHfWtUJ0up9","Bd1WfuhYrZUpYE7ODGO65lnknvIUvoC35IJcvr4lRH3cOCbAHT", "947756430672711680-avkhywucJgaXhbOjiCd6aXGXVZRHISj"," EDiYOUcLix4j6rjPxrcUopQ0eASynASBjNpjH9o92GYY2")
AuthenticateWithTwitterAPI(api_key = apiKey,api_secret = apiSecret,access_token = accessToken,access_token_secret = tokenSecret)
AuthenticateWithTwitterAPI(api_key = apiKey, api_secret = apiSecret, access_token = accessToken, access_token_secret = tokenSecret)
apiKey <- "bIhOZeVfPfdXDxdHfWtUJ0up9"
apiSecret <-  "Bd1WfuhYrZUpYE7ODGO65lnknvIUvoC35IJcvr4lRH3cOCbAHT"
accessToken <- "avkhywucJgaXhbOjiCd6aXGXVZRHISj"
tokenSecret <- "EDiYOUcLix4j6rjPxrcUopQ0eASynASBjNpjH9o92GYY2"
AuthenticateWithTwitterAPI(api_key = apiKey, api_secret = apiSecret, access_token = accessToken, access_token_secret = tokenSecret)
accessToken <- " 947756430672711680-avkhywucJgaXhbOjiCd6aXGXVZRHISj"
accessToken <- "947756430672711680-avkhywucJgaXhbOjiCd6aXGXVZRHISj"
runApp('saveTest.R')
AuthenticateWithTwitterAPI(api_key = apiKey, api_secret = apiSecret, access_token = accessToken, access_token_secret = tokenSecret)
CollectDataTwitter("#Turkey")
runApp('saveTest.R')
CollectDataTwitter(searchTerm = "#turkey", numTweets = 100)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
a <-  CollectDataTwitter(searchTerm = "#turkey", numTweets = 10)
a
table(a)
as.table(a)
as.matrix(a)
runApp('saveTest.R')
runApp('saveTest.R')
View(a)
typeof(a)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
View(a)
a$text
as.data.frame.data.frame(a)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
list2df
runApp('saveTest.R')
runApp('saveTest.R')
a <-  CollectDataTwitter(searchTerm = "#turkey", numTweets = 10,verbose = T,writeToFile = T)
runApp('saveTest.R')
library(SocialMediaLab)
install.packages("twitteR")
library(twitteR)
a <-  CollectDataTwitter(searchTerm = "#turkey", numTweets = 100,resultType = "json")
library(SocialMediaLab)
library(shiny); runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
a
a <-  CollectDataTwitter(searchTerm = input$demoText, numTweets = 100)
a <-  CollectDataTwitter(searchTerm = "input$demoText", numTweets = 100)
a <-  CollectDataTwitter(searchTerm = "in", numTweets = 100)
b <- matrix(a)
c <- as.data.frame(b)
View(b)
View(c)
View(a)
typeof(a)
type_convert(a)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
a <-  CollectDataTwitter(searchTerm = "in", numTweets = 100)
a <-  CollectDataTwitter(searchTerm = "in", numTweets = 100)
View(a)
as.data.frame(a)
b <- as.data.frame(a)
b
View(b)
b <- as.data.frame(a)
View(b)
runApp('saveTest.R')
runApp('saveTest.R')
a <-  CollectDataTwitter(searchTerm = "in", numTweets = 100)
b <- corpus(a)
b
View(b)
b[[1]]
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
b <- corpus("Mar_19_13_39_38_2018_+03_#turkey_TwitterData.csv")
View(b)
View(b)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
b <- "Mar_19_14_51_03_2018_+03_#galatasaray_TwitterData.csv"
View(b)
runApp('saveTest.R')
runApp('saveTest.R')
b <- readtext("Mar_19_14_51_03_2018_+03_#galatasaray_TwitterData.csv",text_field = "text")
b <- corpus(b)
b <- readtext("Mar_19_14_51_03_2018_+03_#galatasaray_TwitterData.csv",text_field = "text")
c <- corpus(b)
View(c)
runApp('saveTest.R')
library(shiny); runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
apiKey <- "bIhOZeVfPfdXDxdHfWtUJ0up9"
apiSecret <-  "Bd1WfuhYrZUpYE7ODGO65lnknvIUvoC35IJcvr4lRH3cOCbAHT"
accessToken <- "947756430672711680-avkhywucJgaXhbOjiCd6aXGXVZRHISj"
tokenSecret <- "EDiYOUcLix4j6rjPxrcUopQ0eASynASBjNpjH9o92GYY2"
AuthenticateWithTwitterAPI(api_key = apiKey, api_secret = apiSecret, access_token = accessToken, access_token_secret = tokenSecret)
library(SocialMediaLab)
AuthenticateWithTwitterAPI(api_key = apiKey, api_secret = apiSecret, access_token = accessToken, access_token_secret = tokenSecret)
a <-  CollectDataTwitter(searchTerm = "#galatasaray", numTweets = 100)
write.csv(a,"twData")
write.csv(a)
as.data.frame(a)
write.csv(a)
b <- as.data.frame(a)
write.csv(b)
library(plyr)
a <-  CollectDataTwitter(searchTerm = "#galatasaray", numTweets = 100)
tweets.df = ldply(a, function(t) t$toDataFrame())
b <- as.data.frame(a)
write.csv(b)
df <- apply(a,2,as.character)
write.csv(df)
write.csv(df,"aNewCSV")
r <- read.csv("aNewCSV")
r$text <- "Text"
View(r)
r <- read.csv("aNewCSV")
colnames(r)[colnames(r)=="text"] <- "Text"
colnames(r)[colnames(r)=="created_at"] <- "Date"
View(r)
library(shiny); runApp('saveTest.R')
write_csv(r,"twCsv.csv")
runApp('saveTest.R')
library(quanteda)
aicorp <- corpus(r)
colnames(r)[colnames(r)=="text"] <- "Text"
aicorp <- corpus(r)
colnames(r)[colnames(r)=="Text"] <- "text"
aicorp <- corpus(r)
View(r)
r <- read.csv("aNewCSV")
aicorp <- corpus(r)
aicorp <- corpus(a)
aicorp
View(aicorp)
saveRDS(aicorp,"aicoprTW")
runApp('saveTest.R')
runApp('saveTest.R')
library(SocialMediaLab)
library(quanteda)
apiKey <- "bIhOZeVfPfdXDxdHfWtUJ0up9"
apiSecret <-  "Bd1WfuhYrZUpYE7ODGO65lnknvIUvoC35IJcvr4lRH3cOCbAHT"
accessToken <- "947756430672711680-avkhywucJgaXhbOjiCd6aXGXVZRHISj"
tokenSecret <- "EDiYOUcLix4j6rjPxrcUopQ0eASynASBjNpjH9o92GYY2"
AuthenticateWithTwitterAPI(api_key = apiKey, api_secret = apiSecret, access_token = accessToken, access_token_secret = tokenSecret)
a <-  CollectDataTwitter(searchTerm = "#galatasaray", numTweets = 100)
df <- apply(a,2,as.character)
write.csv(df,"aNewCSV")
r <- read.csv("aNewCSV")
colnames(r)[colnames(r)=="Text"] <- "text"
colnames(r)[colnames(r)=="created_at"] <- "Date"
View(r)
runApp('saveTest.R')
runApp('saveTest.R')
runApp('saveTest.R')
readRDS("/home/ogulcan/demoGo")
a <- readRDS("/home/ogulcan/demoGo")
a$documents
View(a$documents)
runApp('saveTest.R')
a <- readRDS("/home/ogulcan/demoGo")
a
View(a)
a[["tokens"]]
View(a[["documents"]])
View(a[["documents"]1])
runApp('saveTest.R')
View(a$documents)
runApp('saveTest.R')
a <- readRDS("/home/ogulcan/demoGo")
View(a$documents)
a = a %>% na.omit()
View(a$documents)
library(dp)
library(dplyr)
a = a %>% na.omit()
View(a$documents)
a$documents = a$documents %>% na.omit()
View(a$documents)
a <- readRDS("/home/ogulcan/demoGo")
a$documents <- a$documents %>% na.omit()
View(a$documents)
library(dplyr)
na.omit(a)
View(a$documents)
a <- readRDS("/home/ogulcan/demoGo")
na.action(a)
View(a$documents)
na.omit(a$documents)
View(a$documents)
a$documents %>% na.omit()
a$documents <- a$documents %>% na.omit()
a$documents
View(a$documents)
a <- a$documents %>% na.omit()
View(a$documents)
a <- readRDS("/home/ogulcan/demoGo")
View(a$documents)
a <- a$documents %>% na.omit()
apiKey <- "bIhOZeVfPfdXDxdHfWtUJ0up9"
apiSecret <-  "Bd1WfuhYrZUpYE7ODGO65lnknvIUvoC35IJcvr4lRH3cOCbAHT"
accessToken <- "947756430672711680-avkhywucJgaXhbOjiCd6aXGXVZRHISj"
tokenSecret <- "EDiYOUcLix4j6rjPxrcUopQ0eASynASBjNpjH9o92GYY2"
AuthenticateWithTwitterAPI(api_key = apiKey, api_secret = apiSecret, access_token = accessToken, access_token_secret = tokenSecret)
a <-  CollectDataTwitter(searchTerm = "#Afrin", numTweets = 500,verbose = T,writeToFile = T)
runApp('saveTest.R')
runApp('saveTest.R')
library(shiny); runApp('saveTest.R')
